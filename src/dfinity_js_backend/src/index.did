service: () -> {
    addArtist: (record {bio:text; userName:text; email:text; phone:text; profilePic:text}) -> (variant {Ok:record {id:text; bio:text; userName:text; "principal":principal; contents:vec text; email:text; phone:text; followers:nat64; profilePic:text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    addContent: (record {title:text; subscriptionFee:nat64; cover:text; tags:vec text; description:text; mediaType:text; category:text}) -> (variant {Ok:record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    completeSubscription: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; seller:principal; price:nat64; paid_at_block:opt nat64}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    createSubscriptionPay: (text) -> (variant {Ok:record {status:text; memo:nat64; seller:principal; price:nat64; paid_at_block:opt nat64}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    followArtist: (text) -> (variant {Ok:record {id:text; bio:text; userName:text; "principal":principal; contents:vec text; email:text; phone:text; followers:nat64; profilePic:text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getArtist: (text) -> (variant {Ok:record {id:text; bio:text; userName:text; "principal":principal; contents:vec record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; email:text; phone:text; followers:nat64; profilePic:text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}}) query;
    getArtistByOwner: () -> (variant {Ok:record {id:text; bio:text; userName:text; "principal":principal; contents:vec text; email:text; phone:text; followers:nat64; profilePic:text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}}) query;
    getArtistContents: (text) -> (vec record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}) query;
    getArtists: () -> (vec record {id:text; bio:text; userName:text; "principal":principal; contents:vec record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; email:text; phone:text; followers:nat64; profilePic:text}) query;
    getClient: () -> (variant {Ok:record {id:text; "principal":principal; contents:vec text; following:vec text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}}) query;
    getContent: (text) -> (variant {Ok:record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}}) query;
    getContents: () -> (vec record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}) query;
    getFollowingArtists: () -> (vec record {id:text; bio:text; userName:text; "principal":principal; contents:vec record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; email:text; phone:text; followers:nat64; profilePic:text}) query;
    getFollowingContents: () -> (vec record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}) query;
    likeContent: (text) -> (variant {Ok:record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    updateArtist: (record {id:text; bio:text; userName:text; email:text; phone:text; profilePic:text}) -> (variant {Ok:record {id:text; bio:text; userName:text; "principal":principal; contents:vec text; email:text; phone:text; followers:nat64; profilePic:text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    updateContent: (record {id:text; subscriptionFee:nat64; cover:text; description:text}) -> (variant {Ok:record {id:text; subscriptions:nat64; title:text; subscriptionFee:nat64; owner:principal; createdAt:text; cover:text; tags:vec text; description:text; likes:nat64; updatedAt:opt text; mediaType:text; category:text; comments:vec text}; Err:variant {SubscriptionFailed:text; InvalidPayload:text; NotFound:text; SubscriptionCompleted:text}});
    verifySubscription: (principal, nat64, nat64, nat64) -> (bool) query;
}
